<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aprende on Antonio Moon´s</title>
    <link>https://moonantonio.github.io/categories/aprende/</link>
    <description>Recent content in Aprende on Antonio Moon´s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Sun, 19 Aug 2018 08:32:53 +0200</lastBuildDate>
    
	<atom:link href="https://moonantonio.github.io/categories/aprende/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aprende C# con Unity - Métodos</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/004/</link>
      <pubDate>Sun, 19 Aug 2018 08:32:53 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/004/</guid>
      <description>La parte de &amp;ldquo;acción&amp;rdquo; de la programación proviene de &amp;ldquo;llamar&amp;rdquo; (también conocido como &amp;ldquo;invocar&amp;rdquo;) algo llamado &amp;ldquo;método&amp;rdquo; (también conocido como &amp;ldquo;función&amp;rdquo;). En esta lección aprenderemos cómo definir y llamar a nuestros propios métodos, y luego revisaremos algunos más que son especiales para Unity. Finalmente, crearemos nuestra propia demo de &amp;ldquo;Magic 8 Ball&amp;rdquo; y explicaremos cómo vincular un método con el clic de un botón y generar el resultado de una etiqueta.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Variables</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/003/</link>
      <pubDate>Sun, 19 Aug 2018 06:55:40 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/003/</guid>
      <description>Si yo fuera un modelo de datos de una maquina, habría variables que me describirían incluyendo una para hacer referencia a mi nombre (un valor que no ha cambiado) y mi edad (un valor que cambia cada año). Algunas variables solo pueden ser determinadas por mí, como el nombre de mi película favorita, y otras pueden ser controladas total o parcialmente por fuentes externas, como mi estado civil. Todos estos tipos de relaciones se pueden modelar en código cuando conoces el vocabulario correcto.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Tu primer script</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/002/</link>
      <pubDate>Sun, 19 Aug 2018 05:26:46 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/002/</guid>
      <description>Si nunca antes has creado un script, no te preocupes, no es exactamente ciencia de cohetes. Aprender a programar es como aprender un nuevo idioma, pero estás &amp;ldquo;hablando&amp;rdquo; con la maquina. Al igual que un lenguaje humano se puede dividir en oraciones que consisten en un sustantivo y un verbo, los lenguajes de programación se pueden dividir en variables (el sustantivo) y métodos (el verbo) que a menudo se combinan en enunciados (la oración).</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Introducción</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/001/</link>
      <pubDate>Sun, 19 Aug 2018 04:49:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/001/</guid>
      <description>Esta serie de ayudas están diseñada para una introducción rápida a la programación en C# usando Unity. Introducirá brevemente la mayoría de las características del lenguaje, pero desde la perspectiva del uso dentro de Unity en lugar de casos de uso general, y con suerte, será más interesante aprender de él. Escribiré asumiendo que ya tienes Unity y tienes una comprensión básica del programa.
¿Cómo empezar? Necesitará el motor Unity 3D.</description>
    </item>
    
  </channel>
</rss>