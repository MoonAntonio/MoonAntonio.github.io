<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IA on Antonio Moon´s</title>
    <link>https://moonantonio.github.io/categories/ia/</link>
    <description>Recent content in IA on Antonio Moon´s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Tue, 03 Oct 2017 21:24:19 +0200</lastBuildDate>
    
	<atom:link href="https://moonantonio.github.io/categories/ia/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sistema Gambits</title>
      <link>https://moonantonio.github.io/post/2017/dev/013/</link>
      <pubDate>Tue, 03 Oct 2017 21:24:19 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/013/</guid>
      <description>Descripción del S. Gambit. El sistema gambit, es un sistema que controla el comportamiento o acciones de un agente. Este agente tiene unas listas de prioridades en las que tiene comportamientos o acciones. El agente siempre accionara iteradamente su acción, siempre y cuando cumpla la condición, sino, pasara a la siguiente acción en la lista.
¿Dónde y por qué se necesitó crear el sistema gambit? En 1991, Square Soft, una desarrolladora de videojuegos famosa por sus sagas jrpg, necesitaba generar una serie de patrones para sus enemigos en su juego FF IV.</description>
    </item>
    
    <item>
      <title>NavMesh Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/clase/007/</link>
      <pubDate>Mon, 24 Apr 2017 12:52:34 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/007/</guid>
      <description>Al final del proceso de implementacion de la escena, bakear los elementos que se quieran navegar.
Abrir el inspector Navigation.
Entre las 4 pestañas, usar la de objects para seleccionar todos los objetos vavegables.
Bake para bakear la escena.
Areas para seleccionar el coste de ese terreno, por ejemplo si una area tiene un coste de 1 y otra area con menor distancia hasta el punto n, el NPC ira por el de coste menor ya que llegara mas rapido.</description>
    </item>
    
    <item>
      <title>Agentes de Busqueda y demas.</title>
      <link>https://moonantonio.github.io/post/2017/clase/003/</link>
      <pubDate>Mon, 06 Mar 2017 12:36:44 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/003/</guid>
      <description>Agentes Los agentes de busqueda, son agentes que tienen un objetivo, seguiran haciendo su funcion hasta terminar su busqueda.
Identifica una solucion adecuada dentro del arbol de busqueda.
Primero se formula el objetivo y luego se formula el problema.
 Formulacion del problema:   Estado inicial: El estado inicial del agente.
Estados: Todos los posibles estados a los que el agente puede evolucionar a traves de una secuencia.</description>
    </item>
    
  </channel>
</rss>